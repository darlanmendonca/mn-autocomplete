{"version":3,"sources":["scripts/mn-autocomplete.class.js"],"names":["MnAutocomplete","self","_this","_ret","_classCallCheck","this","input","querySelector","menu","setFilter","setMenu","setOnFocus","_possibleConstructorReturn","addChip","event","target","hasAttribute","element","getAttribute","textContent","document","addEventListener","classList","contains","closest","testRegex","search","value","RegExp","split","join","test","_this2","options","Array","from","querySelectorAll","forEach","option","remove","add","scrollTop","_this3","screen","width","offsetTop","getBoundingClientRect","top","window","pageYOffset","documentElement","clientTop","scrollTo","body","MnChips","customElements","define"],"mappings":"sxCAAMA,eAAAA,SAAAA,iBACJ,QAAAA,gBAAYC,MAAM,GAAAC,OAAAC,IAUhB,OAVgBC,iBAAAC,KAAAL,gBAChBC,KAAAA,MAAAA,2BAAAA,MAAAA,eAAAA,WAAAA,OAAAA,eAAAA,iBAAAA,KAAAA,KAAaA,OAEbC,MAAKI,MAAQJ,MAAKK,cAAc,SAChCL,MAAKM,KAAON,MAAKK,cAAc,QAE/BL,MAAKO,YACLP,MAAKQ,UACLR,MAAKS,aAELR,KAAOF,KAAPW,2BAAAV,MAAAC,oHAeA,QAASU,WACPC,MAAMC,OAAOC,aAAa,SACtBC,QAAQJ,QAAQC,MAAMC,OAAOG,aAAa,SAAUJ,MAAMC,OAAOI,aACjEF,QAAQJ,QAAQC,MAAMC,OAAOI,aAdnCC,SAASC,iBAAiB,YAAa,SAAAP,OACpBA,MAAMC,OAAOO,UAAUC,SAAS,cAC5CT,MAAMC,OAAOS,QAAQ,oBAGxBX,QAAQC,MAAMC,SAIlB,IAAME,SAAUZ,yCAiChB,QAASoB,WAAUC,OAAQC,OAEzB,MADY,IAAIC,QAAOF,OAAOG,MAAM,IAAIC,KAAK,MAAO,KACzCC,KAAKJ,OA1BR,GAAAK,QAAA3B,IACVA,MAAKC,MAAMe,iBAAiB,QAAS,WACnC,GAAMM,OAAQK,OAAK1B,MAAMqB,MACnBM,QAAUC,MAAMC,KAAKH,OAAKxB,KAAK4B,iBAAiB,cAClDT,OACFM,QAAQI,QAAQ,SAAAC,QACMb,UAAUE,MAAOW,OAAOnB,aAExCmB,OAAOhB,UAAUiB,OAAO,UACxBD,OAAOhB,UAAUkB,IAAI,YAG3BR,OAAKxB,KAAK4B,iBAAiB,qBAAqBC,QAAQ,SAAAC,QAAA,MAAUA,QAAOhB,UAAUiB,OAAO,cAI9FlC,KAAKC,MAAMe,iBAAiB,OAAQ,WAClCW,OAAKxB,KACF4B,iBAAiB,qBACjBC,QAAQ,SAAAC,QAAA,MAAUA,QAAOhB,UAAUiB,OAAO,YAE7CP,OAAKxB,KAAKiC,UAAY,yCASb,GAAAC,QAAArC,IACUsC,QAAOC,MAAQ,KAElCvC,KAAKC,MAAMe,iBAAiB,QAAS,WACnC,GAAMwB,WAAYH,OAAKpC,MAAMwC,wBAAwBC,IAAM,GACvDC,OAAOC,YACP7B,SAAS8B,gBAAgBC,SAE7BH,QAAOI,SAAS,EAAGP,WACnBzB,SAASiC,KAAKZ,UAAYI,gCAxELG,OAAOM,QA8EpCN,QAAOO,eAAeC,OAAO,kBAAmBxD","file":"mn-autocomplete.js","sourcesContent":["class MnAutocomplete extends window.MnChips {\n  constructor(self) {\n    self = super(self)\n\n    this.input = this.querySelector('input')\n    this.menu = this.querySelector('menu')\n\n    this.setFilter()\n    this.setMenu()\n    this.setOnFocus()\n\n    return self\n  }\n\n  setMenu() {\n    document.addEventListener('mousedown', event => {\n      const isOption = event.target.classList.contains('mn-option')\n        && event.target.closest('mn-autocomplete')\n\n      if (isOption) {\n        addChip(event.target)\n      }\n    })\n\n    const element = this\n\n    function addChip() {\n      event.target.hasAttribute('value')\n        ? element.addChip(event.target.getAttribute('value'), event.target.textContent)\n        : element.addChip(event.target.textContent)\n    }\n  }\n\n  setFilter() {\n    this.input.addEventListener('keyup', () => {\n      const value = this.input.value\n      const options = Array.from(this.menu.querySelectorAll('.mn-option'))\n      if (value) {\n        options.forEach(option => {\n          const matchOption = testRegex(value, option.textContent)\n          matchOption\n            ? option.classList.remove('hidden')\n            : option.classList.add('hidden')\n        })\n      } else {\n        this.menu.querySelectorAll('.mn-option.hidden').forEach(option => option.classList.remove('hidden'))\n      }\n    })\n\n    this.input.addEventListener('blur', () => {\n      this.menu\n        .querySelectorAll('.mn-option.hidden')\n        .forEach(option => option.classList.remove('hidden'))\n\n      this.menu.scrollTop = 0\n    })\n\n    function testRegex(search, value) {\n      const reg = new RegExp(search.split('').join('.*'), 'i')\n      return reg.test(value)\n    }\n  }\n\n  setOnFocus() {\n    const mobileDevice = screen.width < 768\n    if (mobileDevice) {\n      this.input.addEventListener('focus', () => {\n        const offsetTop = this.input.getBoundingClientRect().top - 20\n          + window.pageYOffset\n          - document.documentElement.clientTop\n\n        window.scrollTo(0, offsetTop)\n        document.body.scrollTop = offsetTop\n      })\n    }\n  }\n}\n\nwindow.customElements.define('mn-autocomplete', MnAutocomplete)\n"]}